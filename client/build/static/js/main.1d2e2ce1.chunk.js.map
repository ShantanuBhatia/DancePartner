{"version":3,"sources":["components/SongTitleView.jsx","components/DanceMarker.jsx","components/MarkerList.jsx","components/VideoPlayerView.jsx","App.js","components/SongSelectionScreen.jsx","components/MobileController.jsx","serviceWorker.js","index.js"],"names":["SongTitleView","react_default","a","createElement","Component","DanceMarker","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","enterEditMode","e","preventDefault","setState","editMode","stopPropagation","goToMarker","target","className","vidReference","seekTo","timestamp","state","label","markedForDelete","handleChange","bind","assertThisInitialized","handleSubmit","handleDelete","console","log","markerID","value","concat","axios","post","cmd","then","response","catch","err","error","style","display","onClick","onSubmit","type","float","captureclick","id","default","onChange","videoID","MarkerList","items","map","item","components_DanceMarker","key","vidID","title","VideoPlayerView","shortref","short","youtube_url","video_id","tag","document","src","firstScriptTag","getElementsByTagName","parentNode","insertBefore","danceVid","counter","setCorrectVid","refreshList","_this2","get","res","markers","data","newItem","getCurrentTime","Date","now","_this3","YT","window","reframed","Player","ref","songtitle","width","vid_width","height","vid_height","frameBorder","onLoad","components_MarkerList","App","callBackendAPI","asyncToGenerator","regenerator_default","mark","_callee","body","wrap","_context","prev","next","fetch","sent","json","status","Error","message","abrupt","stop","song_id","express","MobileController","vidName","vidSet","Boolean","location","hostname","match","routing","react_router_dom","to","react_router","exact","path","component","render","components_VideoPlayerView","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1d2e2ce1.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass SongTitleView extends Component {\r\n    render(){\r\n        return (\r\n            <h1>Dance Practice!</h1>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SongTitleView;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nclass DanceMarker extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n            label: \"Marker at \" + this.props.timestamp,\r\n            editMode: false,\r\n            markedForDelete: false,\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleDelete = this.handleDelete.bind(this);\r\n    }\r\n\r\n    // if the \"rename is clicked, then instead we should render a textfield where the default \"\r\n    componentDidMount(){\r\n        this.setState({label: this.props.label})\r\n        console.log(\"I'm a marker!!! My id is \" + this.props.markerID);\r\n    }\r\n    enterEditMode = (e) => {\r\n        e.preventDefault();\r\n        this.setState({editMode: true});\r\n        e.stopPropagation();\r\n    }\r\n\r\n    goToMarker = (e) => {\r\n        if(e.target.className !== \"btn btn-info\" && e.target.className !== \"form-control\"){\r\n            this.props.vidReference.seekTo(this.props.timestamp);\r\n        } \r\n    }\r\n\r\n\r\n    handleChange(e) {\r\n        this.setState({ label: e.target.value });\r\n        e.stopPropagation();\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n        console.log( `UPDATE markers SET title=\"${this.state.label}\" WHERE markerID=\"${this.props.markerID}\";`);\r\n        this.setState({editMode:false})\r\n        axios.post('/updatemarker', {cmd: `UPDATE markers SET title=\"${this.state.label}\" WHERE markerID=\"${this.props.markerID}\";`})\r\n        .then((response) => {console.log(response)})\r\n        .catch((err)=>{console.error(err)})\r\n\r\n        // \"UPDATE markers SET title=\" + this.state.label + \" WHERE markerID=\" + this.props.markerid\r\n        \r\n        e.stopPropagation();\r\n    }\r\n\r\n    captureclick(e) {\r\n        e.stopPropagation();\r\n    }\r\n\r\n    doNothing(e){\r\n        e.stopPropagation();\r\n    }\r\n    handleDelete(e) {\r\n        e.preventDefault();\r\n        console.log(\"AAAAAAAAAAAAA!!!!!\");\r\n        console.log(`/remove/${this.props.markerID}`);\r\n        console.log(\"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA!!!\");\r\n        this.setState({markedForDelete: true});\r\n        axios.post(`/remove/${this.props.markerID}`)\r\n        .then((response) => {console.log(response)})\r\n        .catch((err)=>{console.error(err)})\r\n        // axios.post()\r\n    }\r\n    render(){\r\n        if(this.state.markedForDelete){\r\n            return(\r\n                <li className=\"list-group-item list-group-item-danger\">\r\n                    <p className=\"text-center\" style={{\"display\": \"inline-block\"}} >Click the Reload List button to remove</p>\r\n                </li>\r\n                );\r\n        }\r\n        else { \r\n            if(this.state.editMode) {\r\n                return(\r\n                <li className=\"list-group-item list-group-item-primary\" onClick={this.goToMarker}>\r\n                    <form onSubmit={this.handleSubmit} >\r\n                        <button type=\"submit\" className=\"btn btn-info\" style={{\"display\": \"inline-block\", \"float\":\"right\"}} onClick = {this.captureclick}>Rename</button>\r\n                        <div className=\"col-sm-4 col-offset-sm-4\" >\r\n                        <input\r\n                            className=\"form-control\" \r\n                            style={{\"display\": \"inline-block\", \"float\":\"left\"}}\r\n                            id=\"new-label\"\r\n                            default={this.state.label}\r\n                            onChange={this.handleChange}\r\n                            value={this.state.label}\r\n                            onClick = {this.captureclick}\r\n                        />\r\n                        </div>\r\n                    </form>\r\n                    \r\n                    \r\n                    \r\n                </li>\r\n                );\r\n            }\r\n            else {\r\n                console.log(\"I am a marker on video \" + this.props.videoID)\r\n                return (\r\n                <li className=\"list-group-item list-group-item-primary\" onClick={this.goToMarker}>\r\n                    <button className=\"btn btn-info\" style={{\"display\": \"inline-block\", \"float\":\"right\"}} onClick={this.enterEditMode}>Rename</button>\r\n                    <p className=\"text-center\" style={{\"display\": \"inline-block\"}} >{this.state.label}</p>\r\n                    <p className=\"btn btn-danger\" style={{\"display\": \"inline-block\", \"float\":\"left\"}} onClick={this.handleDelete}>Delete</p>\r\n                </li>\r\n\r\n                );\r\n            }\r\n        }\r\n        \r\n        \r\n    }\r\n}\r\n\r\nexport default DanceMarker;","import React, { Component } from 'react';\r\nimport DanceMarker from './DanceMarker.jsx';\r\n\r\nclass MarkerList extends Component {\r\n    render(){\r\n        return (\r\n            <ul className=\"list-group\">\r\n                {this.props.items.map(item => (\r\n                <DanceMarker key={item.markerID} timestamp={item.timestamp} vidID={item.videoID} vidReference={this.props.vidReference} markerID={item.markerID} label={item.title}/>\r\n                ))}\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MarkerList;","import React, { Component } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport MarkerList from './MarkerList.jsx';\r\nimport '../css/vidStyles.css';\r\nimport axios from 'axios';\r\nclass VideoPlayerView extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        // youtube API setup\r\n        var tag = document.createElement('script');\r\n        tag.id = 'iframe-test';\r\n        tag.src = 'https://www.youtube.com/iframe_api';\r\n        var firstScriptTag = document.getElementsByTagName('script')[0];\r\n        firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\r\n        this.state = {\r\n            items: [],\r\n            danceVid: \"VIDEO NOT SET\",\r\n            counter: 0,\r\n        };\r\n\r\n        \r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.setCorrectVid = this.setCorrectVid.bind(this);\r\n        this.refreshList = this.refreshList.bind(this);\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n        // var tag = document.createElement('script');\r\n        // console.log(\"Is this synchronous?\");\r\n        // tag.id = 'iframe-test';\r\n        // tag.src = 'https://www.youtube.com/iframe_api';\r\n        // console.log(\"But actually, what happens first\");\r\n        // var firstScriptTag = document.getElementsByTagName('script')[0];\r\n        // firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\r\n\r\n        // window['onYouTubeIframeAPIReady'] = (e) => {\r\n        //     this.YT = window['YT'];\r\n        //     this.reframed = false;\r\n            \r\n        //     this.danceVid = new window['YT'].Player(this.shortref());\r\n        //     this.setState({danceVid: this.danceVid})\r\n        //     console.log(\"MOUNTED!\");\r\n        // };\r\n\r\n        axios.get(`/song/${this.props.video_id}`)\r\n        .then((res)=>{\r\n            const markers = res.data;\r\n            console.log(\"Got markers!\");\r\n            console.log(markers);\r\n            this.setState({items: markers});\r\n        })\r\n        .catch((err)=>{console.error(err)})\r\n    }\r\n\r\n\r\n    handleSubmit(e) {\r\n        console.log(this.state.danceVid);\r\n\r\n\r\n        e.preventDefault();\r\n        // if (!this.state.text.length) {\r\n        //     return;\r\n        // }\r\n        const newItem = {\r\n            timestamp: this.state.danceVid.getCurrentTime(),\r\n            markerID: \"M\" + Date.now(),\r\n            videoID: this.props.video_id,\r\n            title: \"Marker at \"+this.state.danceVid.getCurrentTime(),\r\n            // vidReference: this.state.danceVid\r\n        };\r\n        console.log(newItem)\r\n        this.setState(state => ({\r\n            items: state.items.concat(newItem),\r\n        }));\r\n        axios.post('/pushmarker', newItem)\r\n        .then((response) => {console.log(response)})\r\n        .catch((err)=>{console.error(err)})\r\n    }\r\n\r\n\r\n    refreshList(e) {\r\n        e.preventDefault();\r\n        console.log(\"A refresh was requested\");\r\n        axios.get(`/song/${this.props.video_id}`)\r\n        .then((res)=>{\r\n            const markers = res.data;\r\n            console.log(markers);\r\n            this.setState({items: markers});\r\n        })\r\n        .catch((err)=>{console.error(err)})\r\n    }\r\n    setCorrectVid(){\r\n            this.YT = window['YT'];\r\n            this.reframed = false;\r\n            \r\n            this.danceVid = new window['YT'].Player(this.shortref());\r\n            this.setState({danceVid: this.danceVid})\r\n            console.log(\"SCV mounted\");\r\n    }\r\n    shortref = () => {return \"dancesong_\" + this.props.short}\r\n    youtube_url = (video_id) => {return \"https://www.youtube.com/embed/\" + video_id + \"?enablejsapi=1\"};\r\n    \r\n    \r\n    render(){\r\n        // console.log(\"Rendering vid\");\r\n        // let YT = window['YT'];\r\n        // let reframed = false;\r\n        // let danceVidNew = new window['YT'].Player(this.shortref());\r\n        // this.setState({danceVid: this.danceVid});\r\n        // this.setCorrectVid();\r\n        return (\r\n        <div id=\"video-player-container\">\r\n        <h5>Your player code is: {this.props.short}</h5>\r\n        <iframe \r\n                id={this.shortref()}\r\n                ref={this.shortref()}\r\n                title = {this.props.songtitle}\r\n                width={this.props.vid_width} height={this.props.vid_height}\r\n                src={this.youtube_url(this.props.video_id)}\r\n                frameBorder=\"0\"       \r\n                onLoad={this.setCorrectVid} \r\n        ></iframe>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <button  type=\"submit\" className=\"btn btn-primary\">\r\n            Add a Marker Here\r\n          </button>\r\n        </form>\r\n        <h3>Markers</h3>\r\n        <div className=\"row marker-list\">\r\n            <div style={{width: \"50vw\"}}>\r\n                <MarkerList items={this.state.items} vidReference={this.state.danceVid}/>\r\n            </div>\r\n        </div>\r\n        <form onSubmit={this.refreshList}>\r\n          <button  type=\"submit\" className=\"btn btn-primary\">\r\n            Reload List\r\n          </button>\r\n        </form>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default VideoPlayerView;","import React, { Component } from 'react';\nimport {\n  Route,\n  NavLink,\n  BrowserRouter\n} from \"react-router-dom\";\n\nimport './App.css';\nimport SongTitleView from './components/SongTitleView.jsx';\nimport VideoPlayerView from './components/VideoPlayerView.jsx';\nimport SongSelectionScreen from './components/SongSelectionScreen.jsx';\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      songtitle: \"Yes or Yes\",\n      song_id: \"Nl4BJ2TDmWE\",\n      data: \"The server failed to connect\",\n    };\n  }\n\n  componentDidMount(){\n    this.callBackendAPI()\n      .then(res => this.setState({ data: res.express }))\n      .catch(err => console.log(err));\n  }\n\n  callBackendAPI = async () => {\n    const response = await fetch('/express_backend');\n    const body = await response.json();\n\n    if (response.status !== 200) {\n      throw Error(body.message) \n    }\n    return body;\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>Pick a song to begin</h1>\n        <p>{this.state.data}</p>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from 'react';\r\n\r\nclass SongSelectionScreen extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        //{/*style={border: \"solid 4px #37474F\"}*/}\r\n    }\r\n\r\n    \r\n    render(){\r\n        return (\r\n        <div>\r\n        <h1>hi!</h1>\r\n        <h2  className=\"btn btn-primary\">YES OR YES - TWICE</h2><br/>\r\n        <h2  className=\"btn btn-primary\">BOSS - NCT U</h2><br/>\r\n        <h2  className=\"btn btn-primary\">SHINE - PENTAGON</h2><br/>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SongSelectionScreen;","import React, { Component } from 'react';\r\nimport ControllerMarkerList from './MarkerList.jsx';\r\n\r\nclass MobileController extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            items: [],\r\n            vidName: null,\r\n            vidSet: false,\r\n        };\r\n    }\r\n\r\n\r\n    render(){\r\n        if(this.state.vidSet == false){\r\n            return (\r\n                <div className=\"phone-menu\">\r\n                    <h1>Smartphone Controller</h1>\r\n                    <p>Select a video to begin</p>\r\n                </div>\r\n            );\r\n        }\r\n        else{\r\n            return(\r\n                <div className=\"row marker-list\">\r\n                    <div style={{width: \"50vw\"}}>\r\n                        <ControllerMarkerList items={this.state.items} />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default MobileController;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport './App.css';\nimport { Route, Link, NavLink, BrowserRouter as Router } from 'react-router-dom';\nimport App from './App';\nimport SongTitleView from './components/SongTitleView.jsx';\nimport VideoPlayerView from './components/VideoPlayerView.jsx';\nimport MobileController from './components/MobileController.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nconst routing = (\n    <Router>\n        \n        <div className=\"App\">\n            <h1>Welcome to DancePartner!</h1>\n            <ul className=\"navbar\">\n                <NavLink to=\"/\" className=\"btn btn-primary\">Home</NavLink>\n                <NavLink to=\"/twice\" className=\"btn btn-primary\">Yes Or Yes - Twice</NavLink>\n                <NavLink to=\"/pentagon\" className=\"btn btn-primary\">Shine - Pentagon</NavLink>\n                <NavLink to=\"/nct\" className=\"btn btn-primary\">Boss - NCT U</NavLink>\n                <NavLink to=\"/mobile\" className=\"btn btn-primary\">Phone Menu</NavLink>\n            </ul>\n            <Route exact path=\"/\" component={App} />\n            <Route path=\"/title\" component={SongTitleView} />\n            <Route path=\"/twice\" render={() => <VideoPlayerView  title={\"Yes or Yes\"} video_id={\"Nl4BJ2TDmWE\"} vid_width={640} vid_height={360} short={\"yory\"}/>} />\n            <Route path=\"/pentagon\" render={() => <VideoPlayerView  title={\"Shine\"} video_id={\"6_v8n_zb5ak\"} vid_width={640} vid_height={360} short={\"shine\"} />} />\n            <Route path=\"/nct\" render={() => <VideoPlayerView  title={\"Boss\"} video_id={\"-7tSTUR7FG0\"} vid_width={640} vid_height={360} short={\"nct\"} />} />\n            <Route path=\"/mobile\" component={MobileController} />\n        </div>\n    </Router>\n)\n\n\nReactDOM.render(routing, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}